// Generated by CoffeeScript 1.3.3
(function() {
  var fields, reg_form, validators, widgets;

  fields = forms.fields;

  validators = forms.validators;

  widgets = forms.widgets;

  reg_form = forms.create({
    firstname: fields.string({
      required: false
    }),
    lastname: fields.string({
      required: false
    }),
    email: fields.email({
      required: true
    }),
    password: fields.password({
      required: true
    }),
    confirm: fields.password({
      required: true,
      validators: [validators.matchField('password')]
    })
  });

  app.get('/user/login', function(req, res) {
    return res.json([{}]);
  });

  app.post('/user/login', function(req, res) {
    return res.json([{}]);
  });

  app.get('/user/logout', function(req, res) {
    return res.json([{}]);
  });

  app.get('/user/register', function(req, res) {
    return res.render('register', {
      locals: {
        title: 'Filling out form...',
        form: reg_form.toHTML()
      }
    });
  });

  app.post('/user/register', function(req, res) {
    return reg_form.handle(req, {
      success: function(form) {
        var _this = this;
        console.log(form.data);
        this.aUser = new User(form.data);
        this.aUser.save(function(err) {});
        if (typeof err !== "undefined" && err !== null) {
          return res.json(err, 500);
        } else {
          return res.json(this.aUser);
        }
      },
      error: function(form) {
        var aform;
        console.log('oops');
        aform = reg_form.bind(form.data);
        return res.render('register', {
          locals: {
            title: 'Please use a valid email. Email and password are required fields.',
            form: aform.toHTML()
          }
        });
      }
    });
  });

}).call(this);
